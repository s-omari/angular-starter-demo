{"version":3,"sources":["webpack:///./src/app/demo/crud/components/crud-form/crud-form.component.html","webpack:///./src/app/demo/crud/components/crud-form/crud-form.component.scss","webpack:///./src/app/demo/crud/components/crud-form/crud-form.component.ts","webpack:///./src/app/demo/crud/components/crud-table/crud-table.component.html","webpack:///./src/app/demo/crud/components/crud-table/crud-table.component.scss","webpack:///./src/app/demo/crud/components/crud-table/crud-table.component.ts","webpack:///./src/app/demo/crud/crud.component.html","webpack:///./src/app/demo/crud/crud.component.scss","webpack:///./src/app/demo/crud/crud.component.ts","webpack:///./src/app/demo/crud/crud.module.ts","webpack:///./src/app/demo/crud/crud.routing.ts","webpack:///./src/app/demo/crud/crudConfig.ts","webpack:///./src/app/demo/crud/crudFormModels.ts"],"names":[],"mappings":"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","file":"crud-crud-module.js","sourcesContent":["module.exports = \"\\n<form [formGroup]=\\\"formGroup\\\">\\n                \\n  <!-- <dynamic-material-form\\n  (blur)=\\\"onBlur($event)\\\"\\n  (change)=\\\"onChange($event)\\\"\\n  (focus)=\\\"onFocus($event)\\\"\\n  (matEvent)=\\\"onMatEvent($event)\\\"></dynamic-material-form> -->\\n\\n  <dynamic-material-form\\n  [group]=\\\"formGroup\\\"\\n  [model]=\\\"formModel\\\"\\n  ></dynamic-material-form>\\n\\n\\n  <button type=\\\"button\\\" (click)=\\\"addItem()\\\">Add item</button>\\n  <button type=\\\"button\\\" (click)=\\\"clear()\\\">Remove all items</button>\\n  \\n</form>\\n\"","module.exports = \"\"","import { Component, OnInit, Input } from '@angular/core';\n\nimport { FormGroup , FormsModule , ReactiveFormsModule} from '@angular/forms';\nimport { DynamicFormControlModel, DynamicFormService } from '@ng-dynamic-forms/core';\n\n@Component({\n  selector: 'crud-form',\n  templateUrl: './crud-form.component.html',\n  styleUrls: ['./crud-form.component.scss']\n})\nexport class CrudFormComponent implements OnInit {\n\n//  formModel: DynamicFormControlModel[];\n  formGroup: FormGroup;\n\n  @Input() formModel: DynamicFormControlModel[];\n  @Input() entity: any;\n  @Input() rightContent: string;\n  constructor(private dynamicFormService: DynamicFormService) { }\n\n  ngOnInit() {\n    this.formGroup = this.dynamicFormService.createFormGroup(this.formModel);\n  }\n\n}\n","module.exports = \"<!-- <table class=\\\"table\\\">\\n    <thead>\\n        <tr>\\n            <th scope=\\\"col\\\">#</th>\\n            <th *ngFor=\\\"let column of columns\\\">\\n                {{column}}\\n            </th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n            <tr \\n            *ngFor=\\\"let entity of entities\\\" \\n            (click)=\\\"selectEntity(entity)\\\"\\n            [class.selected]=\\\"entity?.id == selectedEntityId\\\" >\\n                <td scope=\\\"row\\\"> {{ entity.id }} </td>\\n                <td *ngFor=\\\"let column of columns\\\">\\n                        {{entity[column]}}\\n                </td>                \\n            </tr>\\n    </tbody>\\n</table> -->\\n\\n<div class=\\\"d-flex flex-column\\\">\\n    <mat-form-field>\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n</mat-form-field>\\n      \\n   \\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort> \\n        <ng-container *ngFor=\\\"let column of displayedColumns\\\" cdkColumnDef={{column}}>\\n            <th mat-header-cell *cdkHeaderCellDef mat-sort-header> {{column | titlecase}} </th>\\n            <td mat-cell *cdkCellDef=\\\"let row\\\"> {{row[column]}} </td>\\n        </ng-container> \\n            \\n        <!-- <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr> -->\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"\\n        [ngClass]=\\\"{'highlight': selectedRowId == row.id}\\\"\\n        (click)=\\\"selectEntity(row) ; highlight(row)\\\"></tr>\\n        \\n\\n        <!-- <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"\\n        [ngClass]=\\\"{'highlight': selectedRowId == row.id}\\\"\\n         (click)=\\\"SelectItem(row) ; highlight(row)\\\"></mat-row> -->\\n\\n\\n\\n        </table>\\n        <mat-paginator class=\\\"mt-auto justify-self-end\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n     \\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\ntd, th {\\n  width: 25%; }\\n\\n.highlight {\\n  background: whitesmoke;\\n  /* green */ }\\n\\n.mat-row:hover {\\n  background-color: #e0e0e0; }\\n\\n.mat-row {\\n  cursor: pointer; }\\n\"","import { Component, OnInit , AfterViewInit , Input ,\n  Output , EventEmitter , ViewChild , OnChanges , SimpleChanges , SimpleChange\n, ChangeDetectionStrategy} from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\n\n@Component({\n  selector: 'crud-table',\n  templateUrl: './crud-table.component.html',\n  styleUrls: ['./crud-table.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CrudTableComponent implements OnInit , AfterViewInit , OnChanges {\n\n  // material table properties\n  displayedColumns = [];\n  dataSource: MatTableDataSource<any>;\n  selectedRowId = -1;\n\n\n  @Input() entities: any;\n  @Input() selectedEntityId: number;\n  @Input() columns: any;\n  @Output() onEntitySelect = new EventEmitter();\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n\n  constructor() {\n\n   }\n\n   ngOnChanges(changes: SimpleChanges) {\n\n    const columns: SimpleChange = changes.columns;\n    const entities: SimpleChange = changes.entities;\n\n    this.displayedColumns = columns.currentValue;\n    this.dataSource = new MatTableDataSource(entities.currentValue);\n\n\n}\n\n  ngOnInit() {\n    this.displayedColumns = this.columns;\n    this.dataSource = new MatTableDataSource(this.entities);\n\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  selectEntity(event) {\n    this.onEntitySelect.emit(event);\n  }\n  highlight(row) {\n    this.selectedRowId = row.id;\n}\n\n}\n","module.exports = \"<div  *ngIf=\\\"crudConfig !== null\\\"  class=\\\"row h-100 \\\">\\n    \\n    <div class=\\\"col h-100\\\" \\n        [hidden]=\\\"!showCenter\\\" \\n        [class.col-md-6]=\\\"!centerExpanded\\\" \\n        [class.col-md-12]=\\\"centerExpanded\\\">\\n\\n    \\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"d-flex align-items-center\\\">\\n                    <h3> {{ crudConfig?.entityTitlePlural | titlecase}} </h3>\\n                    <button mat-button class=\\\"ml-auto\\\" (click)=\\\"openCreateForm()\\\">\\n                        <i class=\\\"fas fa-plus\\\"></i> Create {{ crudConfig?.entityTitle }}</button>\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n        <crud-table\\n            (onEntitySelect)=\\\"selectEntity($event)\\\" \\n            [entities]=\\\"entities\\\" \\n            [selectedEntityId]=\\\"1\\\"\\n            [columns]=\\\"crudConfig.showColumns\\\">\\n        </crud-table>\\n\\n\\n        <!-- <button *ngIf=\\\"!showRight\\\" mat-button (click)=\\\"shrinkRight()\\\" >\\n            Open Right\\n        </button> -->\\n    </div>\\n\\n<div id=\\\"Right\\\" class=\\\"col h-100\\\"  \\n    style=\\\"border-left: 1px solid #c5c5c5;\\\"\\n    [hidden]=\\\"!showRight\\\" \\n    [class.col-md-6]=\\\"!rightExpanded\\\" \\n    [class.col-md-12]=\\\"rightExpanded\\\">\\n\\n  \\n    <div class=\\\"toggles\\\">\\n        <span class=\\\"float-right\\\" (click)=\\\"closeRight()\\\">\\n            <i class=\\\"fas fa-times close-right\\\"></i>\\n        </span>\\n        <span *ngIf=\\\"!rightExpanded\\\" class=\\\"expand-right float-left\\\" (click)=\\\"expandRight()\\\">\\n            <i class=\\\"fas fa-expand-arrows-alt\\\"></i>\\n        </span>\\n        <span *ngIf=\\\"rightExpanded\\\" class=\\\"shrink-right float-left\\\" (click)=\\\"shrinkRight()\\\">\\n            <i class=\\\"fas fa-compress\\\"></i>\\n        </span>\\n        <div class=\\\"clear-both\\\" style=\\\"clear:both\\\"></div>\\n    </div>\\n\\n\\n\\n\\n    <div *ngIf=\\\"selectedEntity\\\">\\n        <div>\\n            <div class=\\\"float-right\\\">\\n                <button (click)=\\\"setRightContent('ViewSelected')\\\"\\n                mat-button\\n                matTooltip=\\\"View\\\" \\n                [matTooltipPosition]=\\\"'above'\\\" \\n                aria-label=\\\"\\\">\\n                <i class=\\\"fas fa-eye\\\"></i>\\n                    </button>   \\n\\n                    <button (click)=\\\"setRightContent('UpdateForm')\\\"\\n                    mat-button\\n                    matTooltip=\\\"Edit\\\" \\n                    [matTooltipPosition]=\\\"'above'\\\" \\n                    aria-label=\\\"\\\">\\n                    <i class=\\\"fas fa-edit\\\"></i>\\n                    </button>  \\n\\n\\n                        <button (click)=\\\"deleteEntity(selectedEntity)\\\"\\n                        mat-button\\n                        matTooltip=\\\"Delete\\\" \\n                        [matTooltipPosition]=\\\"'above'\\\" \\n                        aria-label=\\\"\\\">\\n                        <i class=\\\"fas fa-trash-alt\\\"></i>\\n                        </button>  \\n            </div>\\n\\n            <div style=\\\"clear:both\\\"></div>\\n\\n\\n\\n        </div>\\n\\n\\n\\n        <div *ngIf=\\\"rightContent == 'ViewSelected'\\\">\\n            <h3> View {{ crudConfig?.entityTitle | titlecase}} </h3>\\n\\n            <pre>{{ selectedEntity | json }}</pre>\\n        </div>\\n\\n\\n\\n\\n    </div>\\n\\n\\n    <div *ngIf=\\\"rightContent == 'CreateForm' || rightContent == 'UpdateForm'\\\">\\n        <h4 *ngIf=\\\"rightContent == 'CreateForm'\\\">Create new {{ crudConfig?.entityTitle }} </h4>\\n        <h4 *ngIf=\\\"rightContent == 'UpdateForm'\\\">Update {{ crudConfig?.entityTitle }}</h4>\\n\\n\\n        <!-- <crud-form \\n        [formConfig]=\\\"formConfig\\\" \\n        [entity]=\\\"selectedEntity\\\" \\n        [rightContent]=\\\"rightContent$ | async\\\" \\n        (create)=\\\"onCreate($event)\\\"\\n        (update)=\\\"onUpdate($event)\\\" \\n        (remove)=\\\"onDelete($event)\\\"></crud-form> -->\\n\\n\\n\\n\\n        <crud-form\\n        [formModel]=\\\"formModel\\\" \\n        [entity]=\\\"selectedEntity\\\" \\n        [rightContent]=\\\"rightContent\\\"></crud-form>\\n\\n\\n    </div>\\n\\n</div>\\n</div>\\n\\n\\n\"","module.exports = \"#Right .toggles {\\n  margin: 9px 0;\\n  visibility: hidden; }\\n\\n#Right:hover .toggles {\\n  visibility: visible; }\\n\\n#Left .toggles span {\\n  cursor: pointer; }\\n\\n#Left .toggles {\\n  margin: -2px -4px 1px;\\n  visibility: hidden; }\\n\\n.toggles {\\n  color: #Aeaeae; }\\n\\n#Left:hover .toggles {\\n  visibility: visible; }\\n\\n.toggles span {\\n  cursor: pointer; }\\n\\n.toggles span:hover {\\n  color: #191919; }\\n\"","import { Component, OnInit , Input } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Router, NavigationStart, NavigationEnd , ActivatedRoute } from '@angular/router';\n\nimport * as CrudConfig from './crudConfig';\n// import { FormGroup , FormsModule , ReactiveFormsModule} from '@angular/forms';\n import { DynamicFormControlModel, DynamicFormService } from '@ng-dynamic-forms/core';\n\n@Component({\n  selector: 'crud',\n  templateUrl: './crud.component.html',\n  styleUrls: ['./crud.component.scss']\n})\nexport class CrudComponent implements OnInit {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n  .pipe(\n    map(result => result.matches)\n  );\n   formModel: DynamicFormControlModel[];\n  // formGroup: FormGroup;\n\n\n    // Layout properties\n    rightExpanded = false;\n    showRight = true;\n    centerExpanded = false;\n    showCenter = true;\n    rightContent = 'hello' ;\n\n    // crud properties\n    entityType;\n    crudConfig ;\n    selectedEntity: any;\n    entities: any;\n\n\n  constructor(\n    private breakpointObserver: BreakpointObserver ,\n    private router: Router,\n    private activatedRoute: ActivatedRoute) {\n    this.crudConfig = CrudConfig.categoriesConfig;\n    this.entities = CrudConfig.categoriesList;\n    this.closeRight();\n   }\n\n  ngOnInit() {\n    this.initConfigfromParams();\n\n\n  }\n\n\n  initConfigfromParams() {\n\n    const params = this.activatedRoute.params.subscribe(\n      (params) => {\n    this.entityType =  params['entityType'];\n    this.selectedEntity = '';\n    this.closeRight();\n    console.log(params);\n    switch (params['entityType']) {\n      case 'category':\n      this.crudConfig = CrudConfig.categoriesConfig;\n      this.entities = CrudConfig.categoriesList;\n      this.formModel = CrudConfig.categoriesConfig.FormConfig;\n          break;\n      case 'user':\n      this.crudConfig = CrudConfig.usersConfig;\n      this.entities = CrudConfig.usersList;\n      this.formModel = CrudConfig.usersConfig.FormConfig;\n          break;\n      default:\n      console.log('no entityType params');\n      this.crudConfig = null;\n  }\n   });\n  }\n\n\n  // Crud Operations\n  selectEntity(entity) {\n    console.log('entity selected');\n    this.rightContent = 'ViewSelected';\n    this.shrinkRight();\n    this.selectedEntity = entity;\n  }\n  createEntity(entity) {\n    console.log(entity);\n  }\n  updateEntity(entity) {\n    console.log(entity);\n  }\n  deleteEntity(event) {\n    const remove = window.confirm('are you sure you want to delete this entity?' + event);\n    if (remove) {\n      console.log(event);\n\n    }\n  }\n\n\n\n  // Layout Management\n  setRightContent(event: string) {\n    console.log(event);\n    this.rightContent = event;\n  }\n\n  openUpdateForm() {\n\n  }\n  openCreateForm() {\n    this.selectedEntity = '';\n    this.rightContent = 'CreateForm';\n    this.shrinkRight();\n\n  }\n\n\n  closeRight() {\n    this.selectedEntity = '';\n    this.showRight = false;\n    this.rightContent = '';\n    this.showCenter = true;\n    this.centerExpanded = true;\n  }\n  expandRight() {\n    this.showRight = true;\n    this.rightExpanded = true;\n    this.showCenter = false;\n  }\n  shrinkRight() {\n    this.showRight = true;\n    this.rightExpanded = false;\n    this.showCenter = true;\n    this.centerExpanded = false;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// shared module\nimport {SharedModule} from '../../shared/shared.module';\n\n\n\nimport { routing } from './crud.routing';\nimport { CrudComponent } from './crud.component';\n\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CrudFormComponent } from './components/crud-form/crud-form.component';\nimport { CrudTableComponent } from './components/crud-table/crud-table.component';\n\n// ng dynamic forms\nimport {DynamicFormsModule} from '../../shared/dynamic-forms/dynamic-forms.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    routing,\n    SharedModule ,\n    CdkTableModule ,\n    DynamicFormsModule\n  ],\n  declarations: [\n    CrudComponent ,\n    CrudTableComponent,\n    CrudFormComponent\n  ]\n})\nexport class CrudModule { }\n","import { ModuleWithProviders } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\n\n\nimport { CrudComponent } from './crud.component';\n\nconst routes: Routes = [\n\n  { path: '' , component: CrudComponent },\n  // {path: 'categories' , redirectTo: '' , pathMatch: 'full' }\n\n\n];\n\n\nexport const routing: ModuleWithProviders = RouterModule.forChild(routes);\n","import { CategoryFormModel , UsersFormModel} from './crudFormModels';\n\nexport const categoriesConfig = {\n    apiPath: 'http://restful.api/categories',   // api url of entity\n    FormConfig: CategoryFormModel,                // form fields object\n    entityTitle: 'category',                      // title\n    entityTitlePlural: 'categories',              // plural title\n    showColumns: [ 'title' , 'description']       // choose which columns to display in table\n  };\n\n  export const usersConfig = {\n    apiPath: 'http://restful.api/users',\n    FormConfig: UsersFormModel,\n    entityTitle: 'user',\n    entityTitlePlural: 'users',\n    showColumns: [ 'first_name' , 'email']\n  };\n\n\n\n\n\n\n\n\n\n// replace with db\n  export const categoriesList = [\n      {'id' : 1, 'title': 'shoes' , 'description': 'fast shoes'} ,\n      {'id' : 2, 'title': 'cars' , 'description': 'lorem ipsum'} ,\n  ];\n\n  export const usersList = [\n    {'id' : 1, 'first_name': 'mike ike' , 'last_name': 'ike' , 'email': 'mike@ike.com'} ,\n    {'id' : 2, 'first_name': 'joe' , 'last_name': 'moe' , 'email': 'joe@ipsum.com'} ,\n    {'id' : 3, 'first_name': 'moe' , 'last_name': 'moe' , 'email': 'joe@ipsum.com'} ,\n    {'id' : 4, 'first_name': 'joe' , 'last_name': 'moe' , 'email': 'joe@ipsum.com'} ,\n    {'id' : 5, 'first_name': 'joe' , 'last_name': 'moe' , 'email': 'joe@ipsum.com'} ,\n  ];\n","import {\n    DynamicFormControlModel,\n    DynamicCheckboxModel,\n    DynamicInputModel,\n    DynamicRadioGroupModel\n  } from '@ng-dynamic-forms/core';\n\n  export const CategoryFormModel: DynamicFormControlModel[] = [\n    new DynamicInputModel({\n      id: 'title',\n      label: 'Category Title',\n      placeholder: 'Enter category title'\n    }),\n    new DynamicInputModel({\n      id: 'description',\n      label: 'Category Description',\n      placeholder: 'Enter description of category'\n    }),\n    ];\n\n    export const UsersFormModel: DynamicFormControlModel[] = [\n      new DynamicInputModel({\n        id: 'first_name',\n        label: 'First name',\n        placeholder: 'Enter first name'\n      }),\n      new DynamicInputModel({\n        id: 'last_name',\n        label: 'Last name',\n        placeholder: 'Enter last name'\n      }),\n      new DynamicInputModel({\n        id: 'email',\n        label: 'Email',\n        placeholder: 'Enter email'\n      })\n      ];\n"],"sourceRoot":""}