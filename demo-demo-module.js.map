{"version":3,"sources":["webpack:///./src/app/demo/demo-menu.ts","webpack:///./src/app/demo/demo.component.html","webpack:///./src/app/demo/demo.component.scss","webpack:///./src/app/demo/demo.component.ts","webpack:///./src/app/demo/demo.module.ts","webpack:///./src/app/demo/demo.routing.ts","webpack:///./src/app/demo/dynamic-form/material-sample-form.component.html","webpack:///./src/app/demo/dynamic-form/material-sample-form.component.ts","webpack:///./src/app/demo/dynamic-form/material-sample-form.layout.ts","webpack:///./src/app/demo/dynamic-form/material-sample-form.model.ts","webpack:///./src/app/demo/localization/localization.component.html","webpack:///./src/app/demo/localization/localization.component.scss","webpack:///./src/app/demo/localization/localization.component.ts","webpack:///./src/app/demo/ui-components/ui-components.component.html","webpack:///./src/app/demo/ui-components/ui-components.component.scss","webpack:///./src/app/demo/ui-components/ui-components.component.ts","webpack:///./src/app/demo/validators.ts"],"names":[],"mappings":"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","file":"demo-demo-module.js","sourcesContent":["export const Items = [\n\n    {\n        'title': 'Dynamic Form',\n        'route': 'demo/dynamic-form',\n        'icon': 'chrome_reader_mode'\n    },\n    {\n        'title': 'UI Components',\n        'route': 'demo/ui-components',\n        'icon': 'important_devices',\n        'children': [\n            {\n                'title': 'material components',\n                'route': '',\n                'icon': 'table'\n            },\n            {\n                'title': 'custom components',\n                'route': '',\n                'icon': 'table'\n            }\n        ]\n    },\n    {\n        'title': 'Localization',\n        'route': 'demo/localization',\n        'icon': 'language'\n    },\n    {\n        'title': 'CRUD',\n        'type': 'crud',\n        'route': '',\n        'icon': 'dns',\n        'children': [\n            {\n                'title': 'Categories',\n                'route': 'demo/crud',\n                'params': {'entityType': 'category'},\n                'icon': 'user'\n            },\n            {\n                'title': 'Users',\n                'route': 'demo/crud',\n                'params': {'entityType': 'user'},\n                'icon': 'star'\n            }\n        ]\n    }\n];\n\n\n","module.exports = \"\\n\\n<mat-sidenav-container class=\\\"sidenav-container\\\">\\n\\n  \\n    <mat-sidenav\\n      #drawer\\n      class=\\\"sidenav\\\"\\n      fixedInViewport=\\\"true\\\"\\n      [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n      [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n      [opened]=\\\"!(isHandset$ | async)\\\">\\n      <mat-toolbar color=\\\"primary\\\">\\n          <button  mat-button routerLink=''>\\n              <i class=\\\"fab fa-angular fa-2x\\\"></i>\\n              Angular Starter\\n            </button>\\n      </mat-toolbar>\\n\\n      <side-menu [menuItems]=\\\"menuItems\\\" [activeItem]=\\\"activatedUrl\\\" (onSelect)=\\\"selectMenuItem($event)\\\"></side-menu>\\n\\n    </mat-sidenav>\\n  \\n  \\n    <mat-sidenav-content>\\n      <mat-toolbar color=\\\"primary\\\">\\n        <button\\n          type=\\\"button\\\"\\n          aria-label=\\\"Toggle sidenav\\\"\\n          mat-icon-button\\n          (click)=\\\"drawer.toggle()\\\"\\n          *ngIf=\\\"isHandset$ | async\\\">\\n  \\n          <mat-icon fontSet=\\\"fa\\\" fontIcon=\\\"fa-bars\\\"></mat-icon>\\n  \\n        </button>\\n        <span *ngIf=\\\"(isHandset$ | async)\\\" >\\n            <button  mat-button routerLink=''>\\n                <i class=\\\"fab fa-angular fa-2x\\\"></i>\\n                Angular Starter\\n              </button>\\n        </span>\\n  \\n      <div class=\\\"ml-auto d-flex align-items-center\\\">\\n        <!-- <language-switcher></language-switcher> -->\\n        <theme-switcher [selectedTheme]=\\\"appService.appTheme\\\" (onSelectTheme)=\\\"appService.setTheme($event)\\\"></theme-switcher>\\n        <user-dropdown *ngIf=\\\"user\\\" (onSignOut)=\\\"signOut()\\\" [user]=\\\"user\\\"></user-dropdown>\\n      </div>\\n  \\n  \\n  \\n      </mat-toolbar>\\n  \\n      <div class=\\\"container-fluid h-100 mb-5 pt-3 \\\">\\n          <router-outlet></router-outlet>\\n      </div>\\n  \\n  \\n    </mat-sidenav-content>\\n  \\n  \\n  \\n  </mat-sidenav-container>\\n  \"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Router   , ActivatedRoute } from '@angular/router';\nimport {  NavigationStart, NavigationEnd, NavigationError, NavigationCancel, RoutesRecognized } from '@angular/router';\n\n// import { AuthenticationService } from '../../shared/services/authentication.service';\nimport { UserService } from '../shared/services/user.service';\nimport { AuthService , SocialUser } from 'angularx-social-login';\nimport { AppService } from '../shared/services/app.service';\n\n// menu items\nimport {Items} from './demo-menu';\n\n@Component({\n  selector: 'demo',\n  templateUrl: './demo.component.html',\n  styleUrls: ['./demo.component.scss']\n})\nexport class DemoComponent implements OnInit {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n  .pipe(\n    map(result => result.matches)\n  );\n\n  private user;\n  public currentUser;\n  private loggedIn;\n  public menuItems = Items;\n  public activatedUrl: string;\n\n\n    constructor(\n      private breakpointObserver: BreakpointObserver ,\n      private socialAuthService: AuthService ,\n      private router: Router,\n      public appService: AppService,\n      private userService: UserService,\n      public activatedRoute: ActivatedRoute\n    ) {\n\n    this.user = this.userService.getCurrentUser();\n\n\n  this.activatedUrl = this.router.url;\n   router.events.forEach((event) => {\n    if (event instanceof NavigationStart) {\n      console.log(event.url);\n      this.activatedUrl = event.url;\n    }\n  });\n\n    }\n    ngOnInit() {\n\n    }\n\n    setTheme(theme) {\n      console.log(theme);\n    }\n\n    signOut(): void {\n      this.socialAuthService.signOut();\n   //   this.authService.logOut();\n      this.router.navigate(['public/login']);\n    }\n\n    selectMenuItem(item) {\n      if (item.route !== '') {\n        if (item.params) {\n          this.router.navigate([item.route , item.params]);\n        } else {\n          this.router.navigate([item.route]);\n        }\n      }\n\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { routing } from './demo.routing';\n\n// shared module\nimport {SharedModule} from '../shared/shared.module';\n\n// ng dynamic forms\nimport {DynamicFormsModule} from '../shared/dynamic-forms/dynamic-forms.module';\n\n\n\n// validations\nimport { NG_VALIDATORS, NG_ASYNC_VALIDATORS } from '@angular/forms';\nimport { DYNAMIC_VALIDATORS, Validator, ValidatorFactory } from '@ng-dynamic-forms/core';\nimport {\n  customValidator,\n  customDateRangeValidator,\n  customForbiddenValidator,\n  customAsyncFormGroupValidator\n} from './validators';\n\n\n\nimport { MaterialSampleFormComponent } from './dynamic-form/material-sample-form.component';\nimport { UiComponentsComponent } from './ui-components/ui-components.component';\nimport { LocalizationComponent } from './localization/localization.component';\nimport { DemoComponent } from './demo.component';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    routing,\n\n    SharedModule,\n    DynamicFormsModule,\n\n  ],\n  declarations: [\n    MaterialSampleFormComponent,\n    UiComponentsComponent,\n    LocalizationComponent,\n    DemoComponent\n  ],\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useValue: customValidator,\n      multi: true\n  },\n  {\n      provide: NG_VALIDATORS,\n      useValue: customDateRangeValidator,\n      multi: true\n  },\n  {\n      provide: NG_ASYNC_VALIDATORS,\n      useValue: customAsyncFormGroupValidator,\n      multi: true\n  },\n  {\n      provide: DYNAMIC_VALIDATORS,\n      useValue: new Map<string, Validator | ValidatorFactory>([\n          ['customValidator', customValidator],\n          ['customDateRangeValidator', customDateRangeValidator],\n          ['customForbiddenValidator', customForbiddenValidator],\n          ['customAsyncFormGroupValidator', customAsyncFormGroupValidator]\n      ])\n  },\n\n  ]\n})\nexport class DemoModule { }\n","import { ModuleWithProviders } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\n\nimport { MaterialSampleFormComponent } from './dynamic-form/material-sample-form.component';\nimport { UiComponentsComponent} from './ui-components/ui-components.component';\nimport { LocalizationComponent} from './localization/localization.component';\nimport { DemoComponent } from './demo.component';\nimport { CrudComponent } from './crud/crud.component';\n\nconst routes: Routes = [\n\n  { path: '' , component: DemoComponent ,\nchildren: [\n  { path: 'dynamic-form' , component: MaterialSampleFormComponent },\n  { path: 'ui-components' , component: UiComponentsComponent },\n  { path: 'localization' , component: LocalizationComponent },\n  { path: 'crud', loadChildren: './crud/crud.module#CrudModule' }\n]\n},\n\n\n  // { path: '' , redirectTo: 'dynamic-form' , pathMatch: 'full'},\n  // { path: 'dynamic-form' , component: MaterialSampleFormComponent },\n  // { path: 'ui-components' , component: UiComponentsComponent },\n  // { path: 'localization' , component: LocalizationComponent }\n\n];\n\n\nexport const routing: ModuleWithProviders = RouterModule.forChild(routes);\n","module.exports = \"<div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n                <mat-card>        \\n                        <form [formGroup]=\\\"formGroup\\\">\\n                \\n                                <dynamic-material-form\\n                                [group]=\\\"formGroup\\\"\\n                                [layout]=\\\"formLayout\\\"\\n                                [model]=\\\"formModel\\\"\\n                                (blur)=\\\"onBlur($event)\\\"\\n                                (change)=\\\"onChange($event)\\\"\\n                                (focus)=\\\"onFocus($event)\\\"\\n                                (matEvent)=\\\"onMatEvent($event)\\\"></dynamic-material-form>\\n                \\n                        </form>\\n                </mat-card>\\n        </div>\\n        \\n        <div class=\\\"col-md-6\\\">\\n                <pre>{{formGroup.value | json}}</pre>\\n        </div>\\n        \\n        </div>\\n\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormGroup , FormsModule , ReactiveFormsModule} from '@angular/forms';\nimport { DynamicFormService, DynamicFormControlModel, DynamicFormLayout } from '@ng-dynamic-forms/core';\nimport { MATERIAL_SAMPLE_FORM_MODEL } from './material-sample-form.model';\nimport { MATERIAL_SAMPLE_FORM_LAYOUT } from './material-sample-form.layout';\n\n@Component({\n    selector: 'dynamic-material-sample-form',\n    templateUrl: './material-sample-form.component.html',\n    encapsulation: ViewEncapsulation.None ,\n})\nexport class MaterialSampleFormComponent implements OnInit {\n\n    formModel: DynamicFormControlModel[] = MATERIAL_SAMPLE_FORM_MODEL;\n    formGroup: FormGroup;\n    formLayout: DynamicFormLayout = MATERIAL_SAMPLE_FORM_LAYOUT;\n\n    constructor(private formService: DynamicFormService) {}\n\n    ngOnInit() {\n        this.formGroup = this.formService.createFormGroup(this.formModel);\n    }\n\n    onBlur($event) {\n        console.log(`Material blur event on: ${$event.model.id}: `, $event);\n    }\n\n    onChange($event) {\n        console.log(`Material change event on: ${$event.model.id}: `, $event);\n    }\n\n    onFocus($event) {\n        console.log(`Material focus event on: ${$event.model.id}: `, $event);\n    }\n\n    onMatEvent($event) {\n        console.log(`Material ${$event.type} event on: ${$event.model.id}: `, $event);\n    }\n}\n","export const MATERIAL_SAMPLE_FORM_LAYOUT = {\n\n    'addressStreet': {\n        element: {\n            host: 'material-form-group'\n        }\n    }\n};\n","import {\n    DynamicCheckboxModel,\n    DynamicDatePickerModel,\n    DynamicFormGroupModel,\n    DynamicInputModel,\n    DynamicRadioGroupModel,\n    DynamicSelectModel,\n    DynamicSwitchModel,\n    DynamicTextAreaModel\n} from '@ng-dynamic-forms/core';\n\nexport const MATERIAL_SAMPLE_FORM_MODEL = [\n\n    new DynamicFormGroupModel({\n\n        id: 'stay',\n        group: [\n            new DynamicDatePickerModel({\n\n                id: 'arrivalDate',\n                inline: false,\n                placeholder: 'Date of Arrival'\n            }),\n\n            new DynamicDatePickerModel({\n                id: 'departureDate',\n                inline: false,\n                placeholder: 'Date of Departure'\n            })\n        ]\n    }),\n\n    new DynamicFormGroupModel({\n\n        id: 'room',\n        group: [\n            new DynamicSelectModel<string>({\n\n                id: 'roomSize',\n                placeholder: 'Room Size',\n                hint: 'Choose a room type',\n                options: [\n                    {\n                        label: 'Single Room',\n                        value: 'single-room'\n                    },\n                    {\n                        label: 'Double Room',\n                        value: 'double-room'\n                    },\n                    {\n                        label: 'Business Suite',\n                        value: 'business-suite'\n                    },\n                    {\n                        label: 'Presidential Suite',\n                        value: 'presidential-suite'\n                    },\n                    {\n                        label: 'Storeroom',\n                        value: 'storeroom'\n                    }\n                ]\n            }),\n\n            new DynamicInputModel({\n\n                id: 'roomQuantity',\n                inputType: 'number',\n                placeholder: 'Room Quantity',\n                hint: 'Maximum: 5',\n                max: 5,\n                min: 0\n            })\n        ]\n    }),\n\n    new DynamicInputModel({\n\n        id: 'firstName',\n        maxLength: 25,\n        placeholder: 'First Name',\n        validators: {\n            required: null\n        },\n        errorMessages: {\n            required: 'Field is required'\n        }\n    }),\n\n    new DynamicInputModel({\n\n        id: 'lastName',\n        maxLength: 50,\n        placeholder: 'Last Name',\n        validators: {\n            required: null\n        },\n        errorMessages: {\n            required: 'Field is required'\n        },\n        additional: {\n            color: 'accent'\n        }\n    }),\n\n    new DynamicInputModel({\n\n        id: 'email',\n        placeholder: 'E-Mail',\n        validators: {\n            email: null\n        },\n        errorMessages: {\n            email: 'Field has no valid email'\n        }\n    }),\n\n    new DynamicInputModel({\n\n        id: 'phone',\n        inputType: 'tel',\n        placeholder: 'Phone Number',\n        hint: 'Add your country code first',\n        prefix: '+',\n        validators: {\n            required: null\n        },\n        errorMessages: {\n            required: 'Field is required'\n        }\n    }),\n\n    new DynamicFormGroupModel({\n\n        id: 'addressStreet',\n        group: [\n\n            new DynamicInputModel({\n                id: 'streetName',\n                placeholder: 'Street Name'\n            }),\n\n            new DynamicInputModel({\n                id: 'streetNumber',\n                placeholder: 'Street Number'\n            })\n        ]\n    }),\n\n    new DynamicFormGroupModel({\n\n        id: 'addressLocation',\n        group: [\n            new DynamicInputModel({\n\n                id: 'zipCode',\n                placeholder: 'ZIP'\n            }),\n\n            new DynamicInputModel({\n\n                id: 'state',\n                hint: 'Autocomplete',\n                placeholder: 'State',\n                list: ['Alabama', 'Alaska', 'American Samoa', 'Arizona',\n                'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware',\n                 'District of Columbia', 'Federated States of Micronesia', 'Florida',\n                 'Georgia', 'Guam', 'Hawaii', 'Idaho']\n            }),\n\n            new DynamicInputModel({\n\n                id: 'city',\n                placeholder: 'City'\n            })\n        ]\n    }),\n\n    new DynamicSelectModel<string>({\n\n        id: 'extras',\n        placeholder: 'Extras',\n        multiple: true,\n        options: [\n            {\n                label: 'Breakfast',\n                value: 'extraBreakfast'\n            },\n            {\n                label: 'TV',\n                value: 'extraTV',\n            },\n            {\n                label: 'WiFi',\n                value: 'extraWiFi'\n            },\n            {\n                label: 'Parking Lot',\n                value: 'extraParking'\n            },\n            {\n                label: 'Balcony',\n                value: 'extraBalcony'\n            }\n        ]\n    }),\n\n    new DynamicRadioGroupModel<string>({\n\n        id: 'payment',\n        options: [\n            {\n                label: 'Credit Card',\n                value: 'cc'\n            },\n            {\n                label: 'PayPal',\n                value: 'paypal'\n            },\n            {\n                label: 'Cash',\n                value: 'cash'\n            },\n            {\n                label: 'Bitcoin',\n                value: 'bitcoin'\n            }\n        ],\n        value: 'cc'\n    }),\n\n    new DynamicTextAreaModel({\n\n        id: 'note',\n        rows: 3,\n        placeholder: 'Personal Note'\n    }),\n\n    new DynamicInputModel({\n\n        id: 'tags',\n        placeholder: 'Tags',\n        multiple: true,\n        value: ['hotel', 'booking']\n    }),\n\n    new DynamicSwitchModel({\n\n        id: 'reminder',\n        offLabel: 'Send me a reminder',\n        onLabel: 'Send me a reminder',\n        value: false\n\n    }),\n\n    new DynamicSwitchModel({\n\n        id: 'newsletter',\n        offLabel: 'Subscribe to newsletter',\n        onLabel: 'Subscribe to newsletter',\n        value: true\n    }),\n\n    new DynamicCheckboxModel({\n\n        id: 'confirm',\n        label: 'I confirm the information given above'\n    })\n];\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n\\n    <div class=\\\"d-flex align-items-center\\\">\\n      <h3 class=\\\"spacer\\\">Localization</h3>\\n      <language-switcher></language-switcher>\\n    </div>\\n\\n\\n    <mat-card class=\\\"mt-2 mb-2\\\">\\n      <b>{{translate.currentLang == 'en' ? 'English' : 'French'}} </b>\\n      <div>{{ 'Dashboard' | translate }}</div>\\n    </mat-card>\\n\\n\\n  </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\n\n\n@Component({\n  selector: 'localization',\n  templateUrl: './localization.component.html',\n  styleUrls: ['./localization.component.scss']\n})\nexport class LocalizationComponent implements OnInit {\n\n  constructor(public translate: TranslateService) {\n    translate.addLangs(['en', 'fr']);\n    translate.setDefaultLang('en');\n\n    const browserLang = translate.getBrowserLang();\n    translate.use(browserLang.match(/en|fr/) ? browserLang : 'en');\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n  <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-12\\\">\\n          <mat-card class=\\\"mt-3 mb-3\\\">\\n              <h5>Basic Buttons</h5>\\n              <div class=\\\"button-row\\\">\\n                <button mat-button>Basic</button>\\n                <button mat-button color=\\\"primary\\\">Primary</button>\\n                <button mat-button color=\\\"accent\\\">Accent</button>\\n                <button mat-button color=\\\"warn\\\">Warn</button>\\n                <button mat-button disabled>Disabled</button>\\n                <a mat-button routerLink=\\\".\\\">Link</a>\\n              </div>\\n        \\n              <h5>Raised Buttons</h5>\\n              <div class=\\\"button-row\\\">\\n                <button mat-raised-button>Basic</button>\\n                <button mat-raised-button color=\\\"primary\\\">Primary</button>\\n                <button mat-raised-button color=\\\"accent\\\">Accent</button>\\n                <button mat-raised-button color=\\\"warn\\\">Warn</button>\\n                <button mat-raised-button disabled>Disabled</button>\\n                <a mat-raised-button routerLink=\\\".\\\">Link</a>\\n              </div>\\n        \\n              <h5>Icon Buttons</h5>\\n              <div class=\\\"button-row\\\">\\n                <button mat-icon-button>\\n                  <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\n                </button>\\n                <button mat-icon-button color=\\\"primary\\\">\\n                  <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\n                </button>\\n                <button mat-icon-button color=\\\"accent\\\">\\n                  <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\n                </button>\\n                <button mat-icon-button color=\\\"warn\\\">\\n                  <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\n                </button>\\n                <button mat-icon-button disabled>\\n                  <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\n                </button>\\n              </div>\\n        \\n        \\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                    <h5>Fab Buttons</h5>\\n                    <div class=\\\"button-row\\\">\\n                      <button mat-fab>Basic</button>\\n                      <button mat-fab color=\\\"primary\\\">Primary</button>\\n                      <button mat-fab color=\\\"accent\\\">Accent</button>\\n                      <button mat-fab color=\\\"warn\\\">Warn</button>\\n                      <button mat-fab disabled>Disabled</button>\\n                      <button mat-fab>\\n                        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\n                      </button>\\n                      <a mat-fab routerLink=\\\".\\\">Link</a>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <h5>Mini Fab Buttons</h5>\\n                    <div class=\\\"button-row\\\">\\n                      <button mat-mini-fab>\\n                        <mat-icon>favorite</mat-icon>\\n                      </button>\\n                      <button mat-mini-fab color=\\\"primary\\\">\\n                        <mat-icon>favorite</mat-icon>\\n                      </button>\\n                      <button mat-mini-fab color=\\\"accent\\\">\\n                        <mat-icon>favorite</mat-icon>\\n                      </button>\\n                      <button mat-mini-fab color=\\\"warn\\\">\\n                        <mat-icon>favorite</mat-icon>\\n                      </button>\\n                      <button mat-mini-fab disabled>\\n                        <mat-icon>favorite</mat-icon>\\n                      </button>\\n                      <button mat-mini-fab>\\n                        <mat-icon>\\n                          <mat-icon>favorite</mat-icon>\\n                        </mat-icon>\\n                      </button>\\n                      <a mat-mini-fab routerLink=\\\".\\\">Link</a>\\n                    </div>\\n                </div>\\n              </div>\\n          </mat-card>\\n        </div>\\n   \\n      \\n      <div class=\\\"col-12\\\">\\n          <mat-card class=\\\"mt-3 mb-3\\\">\\n                      <h5>Chips</h5>\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col\\\">\\n                        <mat-chip-list>\\n                          <mat-chip>One fish</mat-chip>\\n                          <mat-chip>Two fish</mat-chip>\\n                          <mat-chip color=\\\"primary\\\" selected=\\\"true\\\">Primary fish</mat-chip>\\n                          <mat-chip color=\\\"accent\\\" selected=\\\"true\\\">Accent fish</mat-chip>\\n                        </mat-chip-list>\\n                      </div>\\n                      <div class=\\\"col\\\">\\n              \\n                        <mat-chip-list class=\\\"mat-chip-list-stacked\\\">\\n                          <mat-chip>One fish</mat-chip>\\n                          <mat-chip>Two fish</mat-chip>\\n                          <mat-chip color=\\\"primary\\\" selected=\\\"true\\\">Primary fish</mat-chip>\\n                          <mat-chip color=\\\"accent\\\" selected=\\\"true\\\">Accent fish</mat-chip>\\n                        </mat-chip-list>\\n                      </div>\\n                    </div>\\n          </mat-card>\\n      </div>\\n\\n      <div class=\\\"col-12\\\">\\n        <mat-card class=\\\"mt-3 mb-3\\\">\\n\\n            <h5>Progress bar</h5>\\n            <mat-progress-bar class=\\\"mb-3\\\" color=\\\"primary\\\"  mode=\\\"determinate\\\" value=\\\"40\\\"></mat-progress-bar>\\n            <mat-progress-bar class=\\\"mb-3\\\" color=\\\"accent\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n            <mat-progress-bar class=\\\"mb-3\\\" mode=\\\"buffer\\\"></mat-progress-bar>\\n            <mat-progress-bar class=\\\"mb-3\\\" color=\\\"warn\\\" mode=\\\"query\\\"></mat-progress-bar>\\n      \\n      \\n            <h5>Badges</h5>\\n            <p><span matBadge=\\\"4\\\" matBadgeOverlap=\\\"false\\\">Text with a badge</span></p>\\n      \\n            <p>\\n              Button with a badge on the left\\n              <button mat-raised-button color=\\\"primary\\\" matBadge=\\\"8\\\" matBadgePosition=\\\"before\\\" matBadgeColor=\\\"accent\\\">\\n                Action\\n              </button>\\n            </p>\\n      \\n            <p>\\n              Icon with a badge\\n              <mat-icon matBadge=\\\"15\\\" matBadgeColor=\\\"warn\\\">home</mat-icon>\\n            </p>\\n      \\n      \\n            <h5>Pagination</h5>\\n            <mat-paginator [length]=\\\"100\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\n            </mat-paginator>\\n            \\n            <h5>Tooltip</h5>\\n            <button mat-raised-button matTooltip=\\\"Info about the action\\\" [matTooltipPosition]=\\\"'right'\\\" aria-label=\\\"Button that displays a tooltip when focused or hovered over\\\">\\n              Action\\n            </button>      \\n      \\n\\n        </mat-card>\\n      </div>\\n  \\n      \\n      \\n      \\n      \\n  \\n      \\n      \\n\\n\\n    \\n      </div>\\n\\n\"","module.exports = \".example-button-row {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-around; }\\n\\n.button-row button {\\n  margin: 5px; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ui-components',\n  templateUrl: './ui-components.component.html',\n  styleUrls: ['./ui-components.component.scss']\n})\nexport class UiComponentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { AbstractControl, FormGroup, ValidationErrors, ValidatorFn } from '@angular/forms';\n\nexport function customValidator(control: AbstractControl): ValidationErrors | null {\n\n    let hasError = control.value ? (control.value as string).startsWith('abc') : false;\n\n    return hasError ? {customValidator: true} : null;\n}\n\nexport function customDateRangeValidator(group: FormGroup): ValidationErrors | null {\n\n    let dateArrival = group.get('arrivalDate').value as Date,\n        dateDeparture = group.get('departureDate').value as Date,\n        hasError = false;\n\n    if (dateArrival && dateDeparture) {\n        hasError = dateArrival >= dateDeparture || dateDeparture <= dateArrival;\n    }\n\n    return hasError ? {customDateRangeValidator: true} : null;\n}\n\nexport function customForbiddenValidator(forbiddenValue: string): ValidatorFn {\n\n    return (control: AbstractControl): ValidationErrors | null => {\n\n        if (control && control.value === forbiddenValue) {\n            return { forbidden: true };\n        }\n\n        return null;\n    }\n}\n\nexport function customAsyncFormGroupValidator(formGroup: FormGroup): Promise<ValidationErrors | null> {\n\n    return new Promise((resolve, reject) => {\n        console.log('async validation');\n        resolve(null);\n    });\n}"],"sourceRoot":""}