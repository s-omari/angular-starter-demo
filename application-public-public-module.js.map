{"version":3,"sources":["webpack:///./src/app/application/public/forgot-password/forgot-password.component.html","webpack:///./src/app/application/public/forgot-password/forgot-password.component.scss","webpack:///./src/app/application/public/forgot-password/forgot-password.component.ts","webpack:///./src/app/application/public/login/login.component.html","webpack:///./src/app/application/public/login/login.component.scss","webpack:///./src/app/application/public/login/login.component.ts","webpack:///./src/app/application/public/public.component.html","webpack:///./src/app/application/public/public.component.scss","webpack:///./src/app/application/public/public.component.ts","webpack:///./src/app/application/public/public.module.ts","webpack:///./src/app/application/public/public.routing.ts","webpack:///./src/app/application/public/signup/signup.component.html","webpack:///./src/app/application/public/signup/signup.component.scss","webpack:///./src/app/application/public/signup/signup.component.ts"],"names":[],"mappings":"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","file":"application-public-public-module.js","sourcesContent":["module.exports = \"<div class=\\\"d-flex justify-content-center mt-5\\\">\\n  <mat-card>\\n    <div class=\\\"brand-box w-100 mb-3\\\">\\n      <div class=\\\"logo1 brand m-auto\\\">\\n        <a href=\\\"#\\\">brand name</a>\\n      </div>\\n    </div>\\n\\n\\n    <mat-card-content>\\n\\n\\n      <form class=\\\"d-flex flex-column \\\">\\n        <mat-form-field>\\n          <input matInput class=\\\"w-100\\\" placeholder=\\\"email\\\" name=\\\"email\\\" required>\\n        </mat-form-field>\\n      </form>\\n\\n\\n\\n\\n    </mat-card-content>\\n\\n    <mat-card-actions>\\n      <button mat-raised-button class=\\\"w-100 mb-2\\\" color=\\\"primary\\\">Reset Password</button>\\n\\n      <div class=\\\"d-flex justify-content-center\\\">\\n        <button mat-raised-button routerLink=\\\"../login\\\">Back to Login</button>\\n      </div>\\n    </mat-card-actions>\\n  </mat-card>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n<div class=\\\"d-flex justify-content-center mt-5\\\">\\n        \\n    <mat-card class=\\\"pt-0\\\" >\\n     <mat-progress-bar [style.visibility]=\\\"loading ? 'visible' : 'hidden'\\\" class=\\\"mb-3\\\" color=\\\"accent\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n\\n     <mat-card-header>\\n     \\n            <div class=\\\"brand-box w-100 mb-3\\\">\\n              <div class=\\\"logo2 brand m-auto\\\">\\n                <a href=\\\"#\\\">brand name</a>\\n              </div>\\n            </div>\\n          </mat-card-header>\\n\\n\\n\\n      <mat-card-content>\\n\\n          <pre>Email : admin@admin.com<br/>Password : password\\n          </pre>\\n        \\n        <form class=\\\"d-flex flex-column \\\">\\n            <mat-form-field >\\n                <input matInput class=\\\"w-100\\\" placeholder=\\\"email\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" required>\\n                </mat-form-field>\\n                <mat-form-field >\\n                    <input matInput  class=\\\"w-100\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" required>\\n                </mat-form-field>\\n        </form>\\n  \\n\\n      </mat-card-content>\\n  \\n      <mat-card-actions>\\n        <button mat-raised-button class=\\\"w-100 mb-2\\\" (click)=\\\"login()\\\" color=\\\"primary\\\">Login</button>\\n\\n\\n\\n            \\n        <div class=\\\"d-flex justify-content-center\\\">\\n            <button mat-button routerLink=\\\"../reset-password\\\"  >Forgot Password</button>\\n            <button mat-button routerLink=\\\"../signup\\\"  >Sign Up</button>\\n        </div>\\n\\n        <div class=\\\"w-100 mt-3 mb-3\\\">\\n                <p class=\\\"text-center\\\">or</p>\\n                    <button mat-button  class=\\\"btn btn-social-icon btn-google w-100\\\" (click)=\\\"signInWithGoogle()\\\">\\n                        <span class=\\\"fab fa-google mr-3\\\"></span>Login with Google\\n                    </button>\\n                    <button mat-button  class=\\\"btn btn-social-icon btn-facebook w-100\\\" (click)=\\\"signInWithFB()\\\">\\n                        <span class=\\\"fab fa-facebook mr-3\\\"></span>Login with Facebook\\n                    </button>    \\n                </div>\\n      </mat-card-actions>\\n    </mat-card>\\n  </div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../../../shared/services/authentication.service';\n\n\n// social login\nimport {  AuthService, SocialUser , GoogleLoginProvider, FacebookLoginProvider } from 'angularx-social-login';\n\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  email: string;\n  password: string;\n\n  loading = false;\n  invalidCredentials = false;\n\n  private user: SocialUser;\n  private loggedIn;\n  constructor (\n    private router: Router ,\n    private auth: AuthenticationService,\n    private socialAuthService: AuthService\n  )  {\n  }\n\n\n  ngOnInit() {\n    localStorage.removeItem('currentUser');\n    // this.SubscribeLoginState();\n    // this.socialAuthService.authState.subscribe((user) => {\n    //   this.user = user;\n    //   this.loggedIn = (user != null);\n\n    //   if (user != null) {\n    // //    localStorage.setItem('currentUser', JSON.stringify(user));\n    //     this.router.navigate(['restricted']);\n    //     }\n    // });\n  }\n\n\n  signInWithGoogle(): void {\n    this.socialAuthService.signIn(GoogleLoginProvider.PROVIDER_ID).then(\n      (result) => {\n        this.SubscribeLoginState();\n        this.router.navigate(['restricted']);\n      // if (value) {\n      //   console.log(value , '66666');\n      // }\n    });\n  }\n\n  signInWithFB(): void {\n    this.socialAuthService.signIn(FacebookLoginProvider.PROVIDER_ID);\n  }\n\n  signOut(): void {\n    this.socialAuthService.signOut();\n  }\n\n\n  login(): void {\n    this.loading = true;\n    this.auth.loginUser(this.email , this.password).subscribe(\n\n      (res) => {\n        console.log(res);\n\n        const data = {\n          token: res.token,\n          id: res.user.id,\n          role_id: res.user.role_id,\n          name: res.user.name,\n          email: res.user.email,\n          avatar: res.user.avatar,\n          settings: res.user.settings,\n          created_at: res.user.created_at,\n          updated_at: res.user.updated_at,\n          provider: res.user.provider,\n          provider_id: res.user.provider_id,\n        };\n\n      this.loading = false;\n      this.invalidCredentials = true;\n\n  //    localStorage.setItem('token', JSON.stringify(data.token));\n      localStorage.setItem('currentUser', JSON.stringify(data));\n\n     this.router.navigate(['restricted']);\n      },\n      err => console.log(err)\n    );\n  //  this.SubscribeLoginState();\n    }\n\n\n    SubscribeLoginState() {\n      console.log('SubscribeLoginState');\n      this.socialAuthService.authState.subscribe(\n        (user) => {\n        this.user = user;\n        this.loggedIn = (user != null);\n\n        if (user != null) {\n          localStorage.setItem('currentUser', JSON.stringify(user));\n          }\n      });\n      if (this.auth.loggedIn()) {\n        this.loggedIn = true;\n      }\n      if (this.loggedIn) {\n        console.log('logged in form SubscribeLoginState');\n        this.router.navigate(['restricted']);\n    }\n    }\n\n  }\n","module.exports = \"<router-outlet></router-outlet> \\n\\n\\n<div class=\\\" m-auto pt-5\\\" style=\\\"width:300px\\\">\\n  <p>\\n    login Signup communicate with the  <a href=\\\"http://resto.thedemo.co/api/documentation\\\">resto demo</a>.\\n  </p>\\n  <p>\\n  Use an <a href=\\\"https://chrome.google.com/webstore/detail/cors-toggle/jioikioepegflmdnbocfhgmpmopmjkim?hl=en\\\"> extension</a>\\n  to allow Cross-origin resource sharing (CORS) \\n  </p>\\n\\n\\n</div>\\n\"","module.exports = \".example-icon {\\n  padding: 0 14px; }\\n\\n.example-spacer {\\n  flex: 1 1 auto; }\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { Router } from '@angular/router';\n\nimport { AuthService , SocialUser } from 'angularx-social-login';\n\n\nimport { AppService } from '../../shared/services/app.service';\n\n\n\n@Component({\n  selector: 'app-public',\n  templateUrl: './public.component.html',\n  styleUrls: ['./public.component.scss']\n})\nexport class PublicComponent implements OnInit {\n\n  private user: SocialUser;\n  private loggedIn;\n  constructor(\n    private router: Router,\n    private socialAuthService: AuthService,\n    public appService: AppService\n  ) {\n  }\n\n\n\n  ngOnInit() {\n\n    // this.socialAuthService.authState.subscribe((user) => {\n    //   this.user = user;\n    //   this.loggedIn = (user != null);\n    //   console.log(user);\n    //   if (user != null) {\n    //   // localStorage.setItem('currentUser', JSON.stringify(user));\n    //   this.router.navigate(['restricted']);\n    //   }\n\n    // });\n  }\n\n  // signOut(): void {\n  //   this.socialAuthService.signOut();\n  //   localStorage.removeItem('currentUser');\n  // }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../../shared/shared.module';\nimport { routing } from './public.routing';\n\n\nimport { PublicComponent } from './public.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\n\n@NgModule({\n  imports: [\n    CommonModule ,\n    SharedModule,\n    routing,\n  ],\n  declarations: [\n    PublicComponent  ,\n    LoginComponent ,\n    SignupComponent,\n    ForgotPasswordComponent] ,\n  bootstrap: []\n})\nexport class PublicModule { }\n","import { ModuleWithProviders } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nimport { PublicComponent } from './public.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\n\n\n\nconst routes: Routes = [\n\n    { path: '', component: PublicComponent ,\n      children: [\n        { path: '', redirectTo: 'login', pathMatch: 'full' },\n        { path: 'login', component: LoginComponent },\n        { path: 'signup', component: SignupComponent},\n        { path: 'reset-password', component: ForgotPasswordComponent},\n      ]\n    },\n  ];\n\n\nexport const routing: ModuleWithProviders = RouterModule.forChild(routes);\n\n","module.exports = \"<div class=\\\"d-flex justify-content-center mt-5\\\">\\n\\n\\n  <mat-card class=\\\"pt-0\\\">\\n      <mat-progress-bar [style.visibility]=\\\"loading ? 'visible' : 'hidden'\\\" class=\\\"mb-3\\\" color=\\\"accent\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n    <mat-card-header>\\n     \\n      <div class=\\\"brand-box w-100 mb-3\\\">\\n        <div class=\\\"logo2 brand m-auto\\\">\\n          <a href=\\\"#\\\">brand name</a>\\n        </div>\\n      </div>\\n    </mat-card-header>\\n    <mat-card-content>\\n\\n      <form class=\\\"d-flex flex-column\\\">\\n          <mat-form-field >\\n              <input matInput  class=\\\"w-100\\\" placeholder=\\\"Full name\\\" [(ngModel)]=\\\"name\\\" type=\\\"name\\\" name=\\\"name\\\" required>\\n          </mat-form-field>\\n\\n        <mat-form-field >\\n          <input matInput class=\\\"w-100\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" required>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput class=\\\"w-100\\\" placeholder=\\\"Provider\\\" [(ngModel)]=\\\"provider\\\" name=\\\"provider\\\" >\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput class=\\\"w-100\\\" placeholder=\\\"Provide Id\\\" [(ngModel)]=\\\"provider_id\\\" name=\\\"provider_id\\\" >\\n        </mat-form-field>\\n\\n\\n        <mat-form-field>\\n            <mat-select placeholder=\\\"Role\\\" [(value)]=\\\"role_id\\\" required>\\n              <mat-option value=\\\"1\\\">Normal</mat-option>\\n              <mat-option value=\\\"2\\\">Server</mat-option>\\n              <mat-option value=\\\"3\\\">Manager</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n\\n        <mat-form-field >\\n            <input matInput  class=\\\"w-100\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" required>\\n        </mat-form-field>\\n      </form>\\n\\n    </mat-card-content>\\n\\n    <mat-card-actions>\\n      <button mat-raised-button class=\\\"w-100 mb-2\\\" (click)=\\\"signUp()\\\" color=\\\"primary\\\">Sign up</button>\\n\\n      <div class=\\\"d-flex justify-content-center\\\">\\n          <button mat-raised-button routerLink=\\\"../login\\\"  >Back to Login</button>\\n      </div>\\n\\n    </mat-card-actions>\\n  </mat-card>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from '../../../shared/services/user.service';\nimport {User , Iuser} from '../../../shared/models/user.model';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n\n\n  user: Iuser;\n\n\n  name: string;\n  email: string;\n  password: string;\n  role_id: string;\n  provider: string = null;\n  provider_id: string = null;\n\n  loading = false;\n  constructor(\n    private router: Router ,\n    private activeRoute: ActivatedRoute,\n    private userService: UserService\n  )  {\n\n\n  }\n\n  ngOnInit() {\n  }\n\n\n  signUp(): void {\n\n    this.loading = true;\n\n    let user = {\n      name: this.name,\n      email: this.email,\n      role: this.role_id,\n      password: this.password\n    };\n\n    console.log(user);\n    this.userService.createUser(user).subscribe(\n\n      res => {\n        console.log(res);\n\n        const data = {\n          token_type: res.token_type,\n          expires_in: res.expires_in,\n          access_token: res.access_token\n        };\n\n      // localStorage.setItem('token', JSON.stringify(data.token));\n      // localStorage.setItem('currentUser', JSON.stringify(data));\n      // this.router.navigate(['restricted']);\n\n      },\n      err => console.log(err)\n    );\n\n    }\n\n\n}\n"],"sourceRoot":""}